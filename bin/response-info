#!/usr/bin/env bash

source lib-std.bash

(( $# > 0 )) || usage "[ <curl-options>... ] <url>" "prints HTTP response information in JSON format"

declare -r timeTraceFormat='stderr =========
{
  "appconnect":    %{time_appconnect},
  "connect":       %{time_connect},
  "namelookup":    %{time_namelookup},
  "pretransfer":   %{time_pretransfer},
  "redirect":      %{time_redirect},
  "starttransfer": %{time_starttransfer},
  "total":         %{time_total},
  "size_header":   %{size_header},
  "size_download": %{size_download}
}
'

sanitizeHeaders() {
  local header
  while read header
  do
    if [[ "$header" =~ "=========" ]]
    then
      break
    elif [[ "$header" != "" ]]
    then
      headerName="$(sed -E 's/^([^:]+).*$/\1/g' <<< "$header")"
      headerValue="$(sed -E 's/^[^:]+: *//g' <<< "$header")"
      jq --null-input --arg key "$headerName" --arg value "$headerValue" '{ key: $key, value: $value }'
    fi
  done | jq --slurp 'from_entries'
}

contentFile="$(mktemp)"
curlVersion="$(curl --version | head -1 | cut -f 2 -d ' ')"
stdErr="$(curl --user-agent "$USER/curl/$curlVersion" --write-out "$timeTraceFormat" --dump-header - --output "$contentFile" --silent --show-error "$@" 2>&1)" \
|| die "[$(basename "$0") $*]" "$stdErr"

contentLength="$(wc -c "$contentFile" | sed -Ee 's/^ *([^ ]+).*$/\1/g')"
contentHash="$(md5sum "$contentFile"  | sed -Ee 's/^ *([^ ]+).*$/\1/g')"

headerDump="$(dos2unix <<< "$stdErr")"
responseCode="$(head -n 1 <<< "$headerDump" | cut -f 2 -d ' ')"
headers="$(tail -n +2 <<< "$headerDump" | sanitizeHeaders)"
timeTrace="$(grep -A 100 "=========" <<< "$headerDump" | grep -v "=========")"
jq --argjson code          "$responseCode" \
   --argjson contentLength "$contentLength" \
   --argjson timeTrace     "$timeTrace" \
   --arg     contentHash   "$contentHash" \
   --arg     contentFile   "$contentFile" \
   '{
       code: $code,
#       time_trace: $timeTrace,
       content: { length: $contentLength, hash: $contentHash, file: $contentFile },
       headers: .
     }' \
   <<< "$headers"
