#!/usr/bin/env bash

source stdlib.sh

KEYCHAIN="my-key-chain"
# Return codes:
KEYCHAIN_LOCKED=36
KEY_NOT_FOUND=44

main () {
  if [[ -z "$1" ]]; then
    print_usage
  fi

  case "$1" in
    init)   cmd=init_key_chain ;;
    unlock) cmd=unlock_keychain;;
    lock)   cmd=lock_keychain;;
    ls)     cmd=list_secrets ;;
    get)    cmd=get_secret;;
    set)    cmd=set_secret;;
    rm)     cmd=delete_secret;;
    rename) cmd=rename_secret;;
    *)      cmd=print_usage ;;
  esac
  shift
  $cmd "$@"
  returnCode="$?"
  case $returnCode in
  $KEYCHAIN_LOCKED) die "Keychain is locked (code $returnCode). Use '$(basename "$0") unlock' to unlock";;
  $KEY_NOT_FOUND)   die "Key not found (code $returnCode): '$2'";;
  0);;
  *) die "Error (code $returnCode)"
  esac

}

init_key_chain() {
  security create-keychain "$KEYCHAIN"
  security set-keychain-settings -u -t 60 "$KEYCHAIN"
}

unlock_keychain() {
  security -i unlock-keychain my-key-chain
}

lock_keychain() {
  security lock-keychain my-key-chain
}

list_secrets() {
  security dump-keychain "$KEYCHAIN" | grep 0x00000007 | awk -F= '{print $2}' | tr -d \"
}

get_secret() {
  if [[ -z "$1" ]]; then
    print_usage
  fi
  security find-generic-password -a $USER -s "$1" -w "$KEYCHAIN"
}

set_secret() {
  if [[ -z "$1" ]] || [[ -z "$2" ]]; then
    print_usage
  fi
  security add-generic-password -D secret -U -a $USER -s "$1" -w "$2" "$KEYCHAIN"
}

rename_secret() {
  (( $# == 2 )) || print_usage
  secret="$(get_secret "$1")"
  set_secret "$2" "$secret" || die "Failed to create new secret '$2'"
  delete_secret "$1"
}

delete_secret() {
  if [[ -z "$1" ]]; then
    print_usage
  fi
  security delete-generic-password -a $USER -s "$1" "$KEYCHAIN"
}

print_usage() {
  cat << EOF
Usage:
  sec init                         - initialize keychain
  sec unlock                       - unlock keychain from remote shell
  sec lock                         - lock keychain
  sec set <name> <value>           - set secret value
  sec get <name>                   - get secret value
  sec rename <old-name> <new-name> - rename secret
  sec rm <name>                    - remove secret value
  sec ls                           - list secrets
EOF
  exit 0
}

main "$@"
